import torch
import cv2
from google.colab.patches import cv2_imshow

def process_video_feed(video_path, output_path, crowd_limit=20):

    model = torch.hub.load('ultralytics/yolov5:v6.0', 'yolov5s')

    cap = cv2.VideoCapture(video_path)
    if not cap.isOpened():
        print("Error: Could not open video file.")
        return


    width = int(cap.get(cv2.CAP_PROP_FRAME_WIDTH))
    height = int(cap.get(cv2.CAP_PROP_FRAME_HEIGHT))
    fps = int(cap.get(cv2.CAP_PROP_FPS))

    fourcc = cv2.VideoWriter_fourcc(*'XVID')
    out = cv2.VideoWriter(output_path, fourcc, fps, (width, height))

    while cap.isOpened():
        ret, frame = cap.read()

        if not ret:
            break


        results = model(frame)


        num_people = 0
        for result in results.xyxy[0]:
            if int(result[-1]) == 0:
                num_people += 1
                box = result[0:4].cpu().numpy().astype("int")
                cv2.rectangle(frame, (box[0], box[1]), (box[2], box[3]), (0, 255, 0), 2)


        if num_people > crowd_limit:
            cv2.putText(frame, f"Crowd Detected: {num_people} people", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2, cv2.LINE_AA)
        else:
            cv2.putText(frame, f"Number of People: {num_people}", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2, cv2.LINE_AA)

        cv2_imshow(frame)


        out.write(frame)

        if cv2.waitKey(1) & 0xFF == ord('q'):
            break


    cap.release()
    out.release()
    cv2.destroyAllWindows()


video_path = '/content/sample_data/crowded-video.mp4'
output_path = '/content/Sample_video/output_video.avi'
process_video_feed(video_path, output_path, crowd_limit=10)
